version: "2.4"
services:

  traefik:
    container_name: traefik
    image: traefik
    restart: always
    command: >-
      --certificatesResolvers.default.acme.email=${ACME_EMAIL}
      --certificatesResolvers.default.acme.httpChallenge.entryPoint=http
      --entrypoints.http.address=:80
      --entrypoints.http.http.redirections.entryPoint.to=https
      --entrypoints.https.address=:443
      --providers.docker
      --providers.docker.exposedByDefault=false
    ports:
      - 80:80
      - 443:443
    extra_hosts:
      - host.docker.internal:172.17.0.1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  nextcloud:
    container_name: nextcloud
    image: nextcloud
    restart: always
    links:
      - mariadb
      - redis
    env_file:
      - db.env
    environment:
      MYSQL_HOST: mariadb
      NEXTCLOUD_TRUSTED_DOMAINS: ${DOMAIN_NEXTCLOUD}
      REDIS_HOST: redis
      TRUSTED_PROXIES: 172.16.0.0/12
    volumes:
      - nccontent:/var/www/html
      - ${DATA_DIR}/nextcloud/config:/var/www/html/config
      - ${DATA_DIR}/nextcloud/data:/var/www/html/data
    labels:
      - traefik.enable=true
      - traefik.http.routers.nextcloud.rule=Host(`${DOMAIN_NEXTCLOUD}`)
      - traefik.http.routers.nextcloud.tls=true
      - traefik.http.routers.nextcloud.tls.certresolver=default
      - traefik.http.routers.nextcloud.middlewares=nextcloud-dav@docker,nextcloud-headers@docker
      - traefik.http.middlewares.nextcloud-dav.replacepathregex.regex=^/.well-known/(card|cal)dav
      - traefik.http.middlewares.nextcloud-dav.replacepathregex.replacement=/remote.php/dav/
      - traefik.http.middlewares.nextcloud-headers.headers.customFrameOptionsValue=SAMEORIGIN
      - traefik.http.middlewares.nextcloud-headers.headers.framedeny=true
      - traefik.http.middlewares.nextcloud-headers.headers.sslredirect=true
      - traefik.http.middlewares.nextcloud-headers.headers.stsIncludeSubdomains=true
      - traefik.http.middlewares.nextcloud-headers.headers.stsPreload=true
      - traefik.http.middlewares.nextcloud-headers.headers.stsSeconds=15552000

  nextcloud_cron:
    container_name: nextcloud_cron
    image: nextcloud
    restart: always
    links:
      - mariadb
      - redis
    entrypoint: >-
      grep -q "preview:pre-generate" ||
      echo "00,30 * * * * php -f /var/www/html/occ preview:pre-generate" > /var/spool/cron/crontabs/www-data;
      /cron.sh
    volumes:
      - nccontent:/var/www/html
      - ${DATA_DIR}/nextcloud/config:/var/www/html/config
      - ${DATA_DIR}/nextcloud/data:/var/www/html/data

  mariadb:
    container_name: mariadb
    image: yobasystems/alpine-mariadb
    restart: always
    env_file:
      - db.env
    environment:
      MYSQL_RANDOM_ROOT_PASSWORD: "true"
    command: >-
      --binlog-format=ROW
      --transaction-isolation=READ-COMMITTED
    ports:
      - 3306:3306
    volumes:
      - ${DATA_DIR}/mariadb:/var/lib/mysql

  redis:
    container_name: redis
    image: redis:alpine
    restart: always

  minidlna:
    container_name: minidlna
    image: vladgh/minidlna
    restart: always
    env_file:
      - minidlna.env
    environment:
      MINIDLNA_FRIENDLY_NAME: ${HOSTNAME}
      PUID: 33
      GUID: 33
    network_mode: host
    volumes:
      - ${DATA_DIR}/nextcloud/data:/data:ro

  backup:
    container_name: backup
    image: mazzolino/restic:1
    hostname: ${HOSTNAME}
    restart: always
    cpu_percent: 50
    env_file:
      - restic.env
    environment:
      BACKUP_CRON: "0 0 2 * * *"
      PRE_COMMANDS: >-
        docker exec mariadb mysqldump -A -l |
        gzip |
        restic backup --stdin --stdin-filename mysqldump.sql.gz
      RESTIC_BACKUP_ARGS: >-
        --exclude '*.log'
        --exclude 'appdata_*'
        --exclude 'files_trashbin'
        --exclude 'updater-*'
        --exclude-if-present '.nobackup'
        --exclude-if-present 'ibdata1'
        --exclude-if-present 'platformio.ini'
      RESTIC_FORGET_ARGS: >-
        --keep-daily 7
        --keep-weekly 5
        --keep-monthly 12
      TZ: ${TIMEZONE}
    volumes:
      - ${DATA_DIR}:/data:ro
      - /var/run/docker.sock:/var/run/docker.sock

  backup_prune:
    container_name: backup_prune
    image: mazzolino/restic:1
    hostname: ${HOSTNAME}
    restart: always
    cpu_percent: 50
    env_file:
      - restic.env
    environment:
      PRUNE_CRON: "0 0 5 * * *"
      TZ: ${TIMEZONE}

  watchtower:
    container_name: watchtower
    image: containrrr/watchtower
    restart: always
    environment:
      TZ: ${TIMEZONE}
      WATCHTOWER_CLEANUP: "true"
      WATCHTOWER_SCHEDULE: "0 0 1 * * *"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

volumes:
  nccontent:
