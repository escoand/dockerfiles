version: "2.4"
services:

  caddy:
    container_name: caddy
    image: caddy:alpine
    restart: always
    extra_hosts:
      - homeassistant:192.168.1.43
    ports:
      - 80:80
      - 443:443
    environment:
      - DOMAIN_GROCY
      - DOMAIN_HOMEASSISTANT
      - DOMAIN_NEXTCLOUD
    volumes_from:
      - nextcloud:ro
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - ${DATA_DIR}/caddy:/data/caddy

  nextcloud:
    container_name: nextcloud
    image: nextcloud:fpm-alpine
    restart: always
    links:
      - mariadb
      - redis
    environment:
      - MYSQL_DATABASE
      - MYSQL_HOST=mariadb
      - MYSQL_PASSWORD
      - MYSQL_USER
      - NEXTCLOUD_TRUSTED_DOMAINS=${DOMAIN_NEXTCLOUD}
      - OVERWRITEPROTOCOL=https
      - REDIS_HOST=redis
      - TRUSTED_PROXIES=172.16.0.0/12
    volumes:
      - nccontent:/var/www/html
      - ${DATA_DIR}/nextcloud/config:/var/www/html/config
      - ${DATA_DIR}/nextcloud/data:/var/www/html/data

  nextcloud_cron:
    container_name: nextcloud_cron
    image: nextcloud:fpm-alpine
    restart: always
    depends_on:
      - mariadb
      - nextcloud
      - redis
    entrypoint: sh -c 'cat /crontab > /var/spool/cron/crontabs/www-data && /cron.sh'
    volumes:
      - ./crontab.nextcloud:/crontab:ro
      - nccontent:/var/www/html
      - ${DATA_DIR}/nextcloud/config:/var/www/html/config
      - ${DATA_DIR}/nextcloud/data:/var/www/html/data

  nextcloud_push:
    container_name: nextcloud_push
    image: nextcloud:fpm-alpine
    restart: always
    depends_on:
      - mariadb
      - nextcloud
      - redis
    links:
      - caddy:${DOMAIN_NEXTCLOUD}
    entrypoint: /var/www/html/apps/notify_push/bin/armv7/notify_push /var/www/html/config/config.php
    volumes:
      - nccontent:/var/www/html
      - ${DATA_DIR}/nextcloud/config:/var/www/html/config
      - ${DATA_DIR}/nextcloud/data:/var/www/html/data

  mariadb:
    container_name: mariadb
    image: yobasystems/alpine-mariadb
    restart: always
    environment:
      - MYSQL_DATABASE
      - MYSQL_PASSWORD
      - MYSQL_ROOT_PASSWORD
      - MYSQL_USER
    command: >-
      --binlog-format=ROW
      --transaction-isolation=READ-COMMITTED
    ports:
      - 3306:3306
    volumes:
      - ${DATA_DIR}/mariadb:/var/lib/mysql

  redis:
    container_name: redis
    image: redis:alpine
    restart: always
    command: redis-server --appendonly no --save ""

  samba:
    container_name: samba
    image: dperson/samba
    ports:
      #- 137:137/udp
      #- 138:138/udp
      - 139:139
      - 445:445
    environment:
      - GROUPID=82
      #- NMBD=1
      - RECYCLE=1
      - SHARE1
      - SHARE2
      - SHARE3
      - SMB=1
      - TZ
      - USERID=82
    volumes:
      - ${DATA_DIR}/nextcloud/data:/data:ro
      - ${DATA_DIR}/paperless/consume:/paperless

  minidlna:
    container_name: minidlna
    image: vladgh/minidlna
    restart: always
    environment:
      - GUID=82
      - MINIDLNA_FRIENDLY_NAME=${HOSTNAME}
      - MINIDLNA_INOTIFY=yes
      - MINIDLNA_MEDIA_DIR_1
      - MINIDLNA_MEDIA_DIR_2
      - MINIDLNA_MEDIA_DIR_3
      - MINIDLNA_MEDIA_DIR_4
      - MINIDLNA_MEDIA_DIR_5
      - MINIDLNA_MEDIA_DIR_6
      - MINIDLNA_MEDIA_DIR_7
      - MINIDLNA_MEDIA_DIR_8
      - MINIDLNA_MEDIA_DIR_9
      - MINIDLNA_ROOT_CONTAINER
      - PUID=82
    network_mode: host
    volumes:
      - ${DATA_DIR}/nextcloud/data:/data:ro

  backup:
    container_name: backup
    image: mazzolino/restic
    hostname: ${HOSTNAME}
    restart: always
    cpu_percent: 50
    environment:
      - B2_ACCOUNT_ID
      - B2_ACCOUNT_KEY
      - BACKUP_CRON=0 0 2 * * *
      - POST_COMMANDS_FAILURE
      - POST_COMMANDS_SUCCESS
      - PRE_COMMANDS=
          docker exec mariadb mysqldump -A |
          gzip > /data/mariadb.sql.gz
      - RESTIC_BACKUP_ARGS=
          --exclude '*.log'
          --exclude 'appdata_*'
          --exclude 'files_trashbin'
          --exclude 'updater-*'
          --exclude-if-present '.nobackup'
          --exclude-if-present 'ibdata1'
          --exclude-if-present 'platformio.ini'
          --tag local
      - RESTIC_FORGET_ARGS=
          --group-by tag
          --keep-daily 7
          --keep-weekly 5
          --keep-monthly 12
          --prune
      - RESTIC_PASSWORD
      - RESTIC_REPOSITORY
      - TZ
    volumes:
      - ${DATA_DIR}:/data
      - /var/run/docker.sock:/var/run/docker.sock

volumes:
  nccontent:

# install official docker
#sudo apt-get remove docker docker-engine docker.io runc &&
#echo "deb [arch=armhf signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian $(lsb_release -cs) stable" |
#sudo tee /etc/apt/sources.list.d/docker.list > /dev/null &&
#curl -fsSL https://download.docker.com/linux/debian/gpg |
#sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg &&
#sudo apt-get update &&
#sudo apt-get install docker-ce docker-ce-cli containerd.io
